openapi: '3.0.1'
info:
  version: '0.1.0'
  title: 'AP Domain events'
  description: Get information about events in the Approved Premises domain
paths:
  /events/application-submitted/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-submitted event
      responses:
        '200':
          description: The application-submitted corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSubmittedEnvelope'
        404:
          description: No application-submitted event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/application-withdrawn/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-withdrawn event
      responses:
        '200':
          description: The application-withdrawn event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationWithdrawnEnvelope'
        404:
          description: No application-withdrawn event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/assessment-allocated/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An assessment-allocated event
      responses:
        '200':
          description: The assessment-allocated event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentAllocatedEnvelope'
        404:
          description: No assessment-allocated event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/application-assessed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An 'application-assessed' event
      responses:
        '200':
          description: The 'application-assessed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAssessedEnvelope'
        404:
          description: No application-assessed event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/assessment-appealed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An 'assessment-appealed' event
      responses:
        '200':
          description: The 'assessment-appealed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentAppealedEnvelope'
        404:
          description: No assessment-appealed event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Match' events"
      summary: A 'booking-made' event
      responses:
        '200':
          description: The 'booking-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingMadeEnvelope'
        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-extended/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'booking-extended' event
      responses:
        '200':
          description: The 'booking-extended' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingExtendedEnvelope'
        404:
          description: No 'booking-extended' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-cancelled/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'booking-cancelled' event
      responses:
        '200':
          description: The 'booking-cancelled' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingCancelledEnvelope'
        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-changed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'booking-changed' event
      responses:
        '200':
          description: The 'booking-changed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingChangedEnvelope'
        404:
          description: No 'booking-changed' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-keyworker-assigned/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'booking-keyworker-assigned' event
      responses:
        '200':
          description: The 'booking-keyworker-assigned' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingKeyWorkerAssignedEnvelope'
        404:
          description: No 'booking-keyworker-changed' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-not-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Match' events"
      summary: A 'booking-not-made' event
      responses:
        '200':
          description: The 'booking-not-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingNotMadeEnvelope'
        404:
          description: No 'booking-not-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'person-arrived' event
      responses:
        '200':
          description: The 'person-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonArrivedEnvelope'
        404:
          description: No 'person-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-not-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'person-not-arrived' event
      responses:
        '200':
          description: The 'person-not-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonNotArrivedEnvelope'
        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-departed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'person-departed' event
      responses:
        '200':
          description: The 'person-departed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDepartedEnvelope'
        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/further-information-requested/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: A 'further-information-requested' event
      responses:
        '200':
          description: The 'further-information-requested' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurtherInformationRequestedEnvelope'
        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/placement-application-withdrawn/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'placement-application-withdrawn' event
      responses:
        '200':
          description: The 'placement-application-withdrawn' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementApplicationWithdrawnEnvelope'
        404:
          description: No 'placement-application-withdrawn' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/placement-application-allocated/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'placement-application-allocated' event
      responses:
        '200':
          description: The 'placement-application-allocated' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementApplicationAllocatedEnvelope'
        404:
          description: No 'placement-application-allocated' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/match-request-withdrawn/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'match-request-withdrawn' event
      responses:
        '200':
          description: The 'match-request-withdrawn' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchRequestWithdrawnEnvelope'
        404:
          description: No 'match-request-withdrawn' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/request-for-placement-created/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'request-for-placement-created' event
      responses:
        '200':
          description: The 'request-for-placement-created' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestForPlacementCreatedEnvelope'
        404:
          description: No 'request-for-placement-created' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/request-for-placement-assessed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: A 'request-for-placement-assessed' event
      responses:
        '200':
          description: The 'request-for-placement-assessed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestForPlacementAssessedEnvelope'
        404:
          description: No 'request-for-placement-assessed' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/application-expired/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Manage' events"
      summary: An 'application-expired' event
      responses:
        '200':
          description: The 'application-expired' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationExpiredEnvelope'
        404:
          description: No 'application-expired' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
components:
  responses:
    500Response:
      description: unexpected error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Problem'
  schemas:
    EventId:
      description: The UUID of an event
      type: string
      format: uuid
      example: 364145f9-0af8-488e-9901-b4c46cd9ba37
    DeliusEventNumber:
      description: Used in Delius to identify the 'event' via the first active conviction's 'index'
      type: string
      example: "7"
    ApplicationId:
      description: The UUID of an application for an AP place
      type: string
      format: uuid
      example: 484b8b5e-6c3b-4400-b200-425bbe410713
    ApplicationUrl:
      description: The URL on the Approved Premises service at which a user can view a representation of an AP application and related resources, including bookings
      type: string
      example: https://approved-premises-dev.hmpps.service.justice.gov.uk/applications/484b8b5e-6c3b-4400-b200-425bbe410713
    AssessmentId:
      description: The UUID of an assessment of an application for an AP place
      type: string
      format: uuid
      example: 484b8b5e-6c3b-4400-b200-425bbe410713
    AssessmentUrl:
      description: The URL on the Approved Premises service at which a user can view a representation of an AP assessment and related resources, including bookings
      type: string
      example: https://approved-premises-dev.hmpps.service.justice.gov.uk/assessments/484b8b5e-6c3b-4400-b200-425bbe410713
    AppealId:
      description: The UUID of an appeal for an application
      type: string
      format: uuid
      example: dd450bbc-162d-4380-a103-9f261943b98f
    AppealUrl:
      description: The URL on the Approved Premises service at which a user can view a representation of an appeal and related resources
      type: string
      example: https://approved-premises-dev.hmpps.service.justice.gov.uk/applications/484b8b5e-6c3b-4400-b200-425bbe410713/appeals/dd450bbc-162d-4380-a103-9f261943b98f
    BookingId:
      description: The UUID of booking for an AP place
      type: string
      format: uuid
      example: 14c80733-4b6d-4f35-b724-66955aac320c
    PlacementApplicationId:
      description: The UUID of a placement application
      type: string
      format: uuid
      example: 14c80733-4b6d-4f35-b724-66955aac320c
    RequestForPlacementId:
      description: The UUID of a request for placement. Currently a proxy for PlacementApplicationId
      type: string
      format: uuid
      example: 484b8b5e-6c3b-4400-b200-425bbe410713
    RequestId:
      description: The UUID of a further information request
      type: string
      format: uuid
      example: 484b8b5e-6c3b-4400-b200-425bbe410713
    LegacyApCode:
      description: The 'Q code' used in Delius to identify an Approved Premises
      type: string
      example: Q057
    StaffMember:
      description: A member of probation or AP staff
      type: object
      properties:
        staffCode:
          type: string
          example: N54A999
        forenames:
          type: string
          example: John
        surname:
          type: string
          example: Smith
        username:
          type: string
          example: JohnSmithNPS
      required:
        - staffCode
        - staffIdentifier
        - forenames
        - surname
    Cru:
      type: object
      properties:
        name:
          type: string
          example: NPS North East
      required:
        - name
    Ldu:
      type: object
      properties:
        code:
          type: string
          example: N54PPU
        name:
          type: string
          example: Public Protection NE
      required:
        - code
        - name
    Region:
      type: object
      properties:
        code:
          type: string
          example: NE
        name:
          type: string
          example: North East
      required:
        - code
        - name
    Team:
      type: object
      properties:
        code:
          type: string
          example: N54NGH
        name:
          type: string
          example: Gateshead 1
      required:
        - code
        - name
    ProbationArea:
      type: object
      properties:
        code:
          type: string
          example: N02
        name:
          type: string
          example: NPS North East
      required:
        - code
        - name
    PersonReference:
      type: object
      properties:
        crn:
          type: string
          example: C123456
        noms:
          type: string
          example: A1234ZX
      required:
        - crn
        - noms
    ApplicationSubmittedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/ApplicationSubmitted'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationSubmitted:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        mappa:
          type: string
          example: 'CAT C3/LEVEL L2'
        sentenceLengthInMonths:
          type: integer
          example: 57
        offenceId:
          type: string
          example: 'AB43782'
        releaseType:
          type: string
          example: 'rotl'
        age:
          type: integer
          example: 43
        gender:
          type: string
          enum:
            - Male
            - Female
        targetLocation:
          type: string
          example: LS2
        submittedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        submittedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            probationArea:
              $ref: '#/components/schemas/ProbationArea'
            team:
              $ref: '#/components/schemas/Team'
            ldu:
              $ref: '#/components/schemas/Ldu'
            region:
              $ref: '#/components/schemas/Region'
          required:
            - staffMember
            - probationArea
            - cru
            - team
            - ldu
            - region
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - offenceDescription
        - releaseType
        - age
        - gender
        - targetLocation
        - submittedAt
        - submittedBy
    ApplicationWithdrawnEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/ApplicationWithdrawn'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationWithdrawn:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        withdrawnAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        withdrawnBy:
          $ref: '#/components/schemas/WithdrawnBy'
        withdrawalReason:
          type: string
        otherWithdrawalReason:
          type: string
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - withdrawnAt
        - withdrawnBy
        - withdrawalReason
    ApplicationExpiredEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/ApplicationExpired'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationExpired:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        previousStatus:
          type: string
        updatedStatus:
          type: string
      required:
        - applicationId
        - previousStatus
        - updatedStatus
    WithdrawnBy:
      type: object
      properties:
        staffMember:
          $ref: '#/components/schemas/StaffMember'
        probationArea:
          $ref: '#/components/schemas/ProbationArea'
      required:
        - staffMember
        - probationArea
    ApplicationAssessedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/ApplicationAssessed'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationAssessed:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        assessedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        assessedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            probationArea:
              $ref: '#/components/schemas/ProbationArea'
            cru:
              $ref: '#/components/schemas/Cru'
        decision:
          type: string
          example: Rejected
        decisionRationale:
          type: string
          example: Risk too low
        arrivalDate:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - assessedAt
        - assessedBy
        - decision
    PlacementApplicationWithdrawnEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/PlacementApplicationWithdrawn'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PlacementApplicationWithdrawn:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        placementApplicationId:
          $ref: '#/components/schemas/PlacementApplicationId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        withdrawnAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        withdrawnBy:
          $ref: '#/components/schemas/WithdrawnBy'
        withdrawalReason:
          type: string
          example: 'RELATED_APPLICATION_WITHDRAWN'
        placementDates:
          type: array
          items:
            $ref: '#/components/schemas/DatePeriod'
      required:
        - applicationId
        - applicationUrl
        - placementApplicationId
        - personReference
        - deliusEventNumber
        - withdrawnAt
        - withdrawnBy
        - withdrawalReason
    PlacementApplicationAllocatedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/PlacementApplicationAllocated'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PlacementApplicationAllocated:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        placementApplicationId:
          $ref: '#/components/schemas/PlacementApplicationId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        allocatedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        allocatedTo:
          $ref: '#/components/schemas/StaffMember'
        allocatedBy:
          $ref: '#/components/schemas/StaffMember'
        placementDates:
          type: array
          items:
            $ref: '#/components/schemas/DatePeriod'
      required:
        - applicationId
        - applicationUrl
        - placementApplicationId
        - personReference
        - allocatedAt
        - placementDates
    MatchRequestWithdrawnEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/MatchRequestWithdrawn'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    MatchRequestWithdrawn:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        matchRequestId:
          $ref: '#/components/schemas/PlacementApplicationId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        withdrawnAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        withdrawnBy:
          $ref: '#/components/schemas/WithdrawnBy'
        withdrawalReason:
          type: string
          example: 'RELATED_APPLICATION_WITHDRAWN'
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
        requestIsForApplicationsArrivalDate:
          type: boolean
          description: 'Indicate if this match request was created for the arrival date specified when the application was initially submitted'
      required:
        - applicationId
        - applicationUrl
        - placementApplicationId
        - personReference
        - deliusEventNumber
        - withdrawnAt
        - withdrawnBy
        - withdrawalReason
        - datePeriod
    BookingMadeEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingMade'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingMade:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        createdAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        bookedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            cru:
              $ref: '#/components/schemas/Cru'
        premises:
          $ref: '#/components/schemas/Premises'
        arrivalOn:
          type: string
          example: '2023-01-30'
          format: date
        departureOn:
          type: string
          example: '2023-04-30'
          format: date
        applicationSubmittedOn:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        releaseType:
          type: string
        sentenceType:
          type: string
        situation:
          type: string
      required:
        - applicationId
        - applicationUrl
        - bookingId
        - personReference
        - deliusEventNumber
        - createdAt
        - bookedBy
        - premises
        - arrivalOn
        - departureOn
    BookingChangedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingChanged'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingChanged:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        changedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        changedBy:
          $ref: '#/components/schemas/StaffMember'
        premises:
          $ref: '#/components/schemas/Premises'
        arrivalOn:
          type: string
          example: '2023-01-30'
          format: date
        departureOn:
          type: string
          example: '2023-04-30'
          format: date
      required:
        - applicationId
        - applicationUrl
        - bookingId
        - personReference
        - deliusEventNumber
        - changedAt
        - changedBy
        - premises
        - arrivalOn
        - departureOn
    BookingKeyWorkerAssignedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingKeyWorkerAssigned'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingKeyWorkerAssigned:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        premises:
          $ref: '#/components/schemas/Premises'
        arrivalDate:
          type: string
          example: '2023-02-12'
          format: date
        departureDate:
          type: string
          example: '2023-02-12'
          format: date
        previousKeyWorkerName:
          type: string
        assignedKeyWorkerName:
          type: string
      required:
        - applicationId
        - applicationUrl
        - bookingId
        - keyWorker
        - personReference
        - deliusEventNumber
        - premises
        - arrivalDate
        - departureDate
        - assignedKeyWorkerName
    BookingNotMadeEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingNotMade'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingNotMade:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        attemptedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        attemptedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            cru:
              $ref: '#/components/schemas/Cru'
        failureDescription:
          type: string
          example: No availability
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - attemptedAt
        - attemptedBy
    BookingCancelledEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingCancelled'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingCancelled:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        cancelledAt:
          deprecated: true
          description: cancelledAtDate should be used instead
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        cancelledAtDate:
          type: string
          format: date
        cancelledBy:
          $ref: '#/components/schemas/StaffMember'
        cancellationReason:
          type: string
        cancellationRecordedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - cancelledAt
        - cancelledAtDate
        - cancelledBy
        - cancellationReason
        - cancellationRecordedAt
    BookingExtendedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/BookingExtended'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingExtended:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        extendedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        extendedBy:
          $ref: '#/components/schemas/StaffMember'
        extensionReason:
          type: string
          example: There has been a flood at the housing association to which Mr Smith is moving
        previousDepartureOn:
          type: string
          example: '2023-01-30'
          format: date
        newDepartureOn:
          type: string
          example: '2023-02-12'
          format: date
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - extendedAt
        - extendedBy
        - extensionReason
        - previousDepartureOn
        - newDepartureOn
    PersonArrivedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/PersonArrived'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        applicationSubmittedOn:
          type: string
          example: '2022-08-21'
          format: date
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        recordedBy:
          $ref: '#/components/schemas/StaffMember'
        arrivedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        expectedDepartureOn:
          type: string
          example: '2023-02-28'
          format: date
        previousExpectedDepartureOn:
          type: string
          example: '2023-02-28'
          format: date
        notes:
          type: string
          example: Arrived a day late due to rail strike. Informed in advance by COM.
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - applicationSubmittedOn
        - bookingId
        - premises
        - arrivedAt
        - expectedDepartureOn
        - recordedBy
    PersonNotArrivedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/PersonNotArrived'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonNotArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        expectedArrivalOn:
          type: string
          example: '2022-11-29'
          format: date
        recordedBy:
          $ref: '#/components/schemas/StaffMember'
        notes:
          type: string
          example: We learnt that Mr Smith is in hospital.
        reason:
          type: string
          example: Arrested, remanded in custody, or sentenced
        legacyReasonCode:
          type: string
          example: Q
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - expectedArrivalOn
        - recordedBy
        - reason
        - legacyReasonCode
    PersonDepartedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/PersonDeparted'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonDeparted:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        recordedBy:
          $ref: '#/components/schemas/StaffMember'
        premises:
          $ref: '#/components/schemas/Premises'
        departedAt:
          type: string
          example: '2023-03-30T14:51:30'
          format: date-time
        reason:
          type: string
          example: Arrested, remanded in custody, or sentenced
        legacyReasonCode:
          type: string
          example: Q
        destination:
          type: object
          properties:
            premises:
              $ref: '#/components/schemas/DestinationPremises'
            moveOnCategory:
              $ref: '#/components/schemas/MoveOnCategory'
            destinationProvider:
              $ref: '#/components/schemas/DestinationProvider'
          required:
            - moveOnCategory
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - keyWorker
        - recordedBy
        - premises
        - departedAt
        - reason
        - legacyReasonCode
        - destination
    AssessmentAllocatedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/AssessmentAllocated'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    AssessmentAllocated:
      type: object
      properties:
        assessmentId:
          $ref: '#/components/schemas/AssessmentId'
        assessmentUrl:
          $ref: '#/components/schemas/AssessmentUrl'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        allocatedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        allocatedTo:
          $ref: '#/components/schemas/StaffMember'
        allocatedBy:
          $ref: '#/components/schemas/StaffMember'
      required:
        - assessmentId
        - assessmentUrl
        - applicationId
        - applicationUrl
        - personReference
        - allocatedAt
    FurtherInformationRequestedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/FurtherInformationRequested'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    FurtherInformationRequested:
      type: object
      properties:
        assessmentId:
          $ref: '#/components/schemas/AssessmentId'
        assessmentUrl:
          $ref: '#/components/schemas/AssessmentUrl'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        requestedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        requester:
          $ref: '#/components/schemas/StaffMember'
        recipient:
          $ref: '#/components/schemas/StaffMember'
        requestId:
          $ref: '#/components/schemas/ApplicationId'
      required:
        - assessmentId
        - assessmentUrl
        - applicationId
        - applicationUrl
        - personReference
        - requestedAt
        - requester
        - recipient
        - requestId
    AssessmentAppealedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/AssessmentAppealed'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    AssessmentAppealed:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        appealId:
          $ref: '#/components/schemas/AppealId'
        appealUrl:
          $ref: '#/components/schemas/AppealUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        createdAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        createdBy:
          $ref: '#/components/schemas/StaffMember'
        appealDetail:
          type: string
        decision:
          $ref: '#/components/schemas/AppealDecision'
        decisionDetail:
          type: string
      required:
        - applicationId
        - applicationUrl
        - appealId
        - appealUrl
        - personReference
        - deliusEventNumber
        - createdAt
        - createdBy
        - appealDetail
        - decision
        - decisionDetail
    RequestForPlacementCreatedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/RequestForPlacementCreated'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    RequestForPlacementCreated:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        requestForPlacementId:
          $ref: '#/components/schemas/RequestForPlacementId'
        createdAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        createdBy:
          $ref: '#/components/schemas/StaffMember'
        expectedArrival:
          type: string
          example: '2023-01-30'
          format: date
        duration:
          type: integer
          example: 7
        requestForPlacementType:
          $ref: '#/components/schemas/RequestForPlacementType'
      required:
        - applicationId
        - applicationUrl
        - requestForPlacementId
        - createdAt
        - personReference
        - deliusEventNumber
        - expectedArrival
        - duration
        - requestForPlacementType
    RequestForPlacementType:
      type: string
      enum:
        - initial
        - rotl
        - releaseFollowingDecisions
        - additionalPlacement
    RequestForPlacementAssessedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDetails:
          $ref: '#/components/schemas/RequestForPlacementAssessed'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    RequestForPlacementAssessed:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        placementApplicationId:
          $ref: '#/components/schemas/PlacementApplicationId'
        assessedBy:
          $ref: '#/components/schemas/StaffMember'
        decision:
          type: string
          enum:
            - accepted
            - rejected
        decisionSummary:
          type: string
          example: the decision was to accept
        expectedArrival:
          type: string
          example: '2023-01-30'
          format: date
        duration:
          type: integer
          example: 7
      required:
        - applicationId
        - applicationUrl
        - placementApplicationId
        - assessedBy
        - decision
        - expectedArrival
        - duration
    AppealDecision:
      type: string
      enum:
        - accepted
        - rejected
    Premises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        apCode:
          type: string
          example: NEHOPE1
        legacyApCode:
          $ref: '#/components/schemas/LegacyApCode'
        localAuthorityAreaName:
          type: string
      required:
        - id
        - name
        - apCode
        - legacyApCode
        - localAuthorityAreaName
    DestinationPremises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: New Place
        apCode:
          type: string
          example: NENEW1
        legacyApCode:
          type: string
          example: Q061
        probationArea:
          $ref: '#/components/schemas/ProbationArea'
      required:
        - id
        - name
        - apCode
        - legacyApCode
        - probationArea
    MoveOnCategory:
      type: object
      properties:
        description:
          type: string
          example: B&B / Temp / Short-Term Housing
        legacyMoveOnCategoryCode:
          type: string
          example: MC05
        id:
          type: string
          format: uuid
          example: a3c3d3df-1e27-4ee5-aef6-8a0f0471075f
      required:
        - description
        - legacyMoveOnCategoryCode
        - id
    DestinationProvider:
      type: object
      properties:
        description:
          type: string
          example: Ext - North East Region
        id:
          type: string
          format: uuid
          example: f0703382-3e8f-49ff-82bc-b970c9fe1b35
      required:
        - description
        - id
    Problem:
      type: object
      properties:
        type:
          type: string
          example: https://example.net/validation-error
        title:
          type: string
          example: Invalid request parameters
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: You provided invalid request parameters
        instance:
          type: string
          example: f7493e12-546d-42c3-b838-06c12671ab5b
    DatePeriod:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
        - startDate
        - endDate
    EventType:
      description: The type of an event
      type: string
      enum:
          - approved-premises.application.submitted
          - approved-premises.application.assessed
          - approved-premises.booking.made
          - approved-premises.person.arrived
          - approved-premises.person.not-arrived
          - approved-premises.person.departed
          - approved-premises.booking.not-made
          - approved-premises.booking.cancelled
          - approved-premises.booking.changed
          - approved-premises.booking.keyworker.assigned
          - approved-premises.application.withdrawn
          - approved-premises.application.expired
          - approved-premises.assessment.appealed
          - approved-premises.assessment.allocated
          - approved-premises.assessment.info-requested
          - approved-premises.placement-application.withdrawn
          - approved-premises.placement-application.allocated
          - approved-premises.match-request.withdrawn
          - approved-premises.request-for-placement.created
          - approved-premises.request-for-placement.assessed
      x-enum-varnames:
        - applicationSubmitted
        - applicationAssessed
        - bookingMade
        - personArrived
        - personNotArrived
        - personDeparted
        - bookingNotMade
        - bookingCancelled
        - bookingChanged
        - bookingKeyWorkerAssigned
        - applicationWithdrawn
        - applicationExpired
        - assessmentAppealed
        - assessmentAllocated
        - informationRequestMade
        - placementApplicationWithdrawn
        - placementApplicationAllocated
        - matchRequestWithdrawn
        - requestForPlacementCreated
        - requestForPlacementAssessed
